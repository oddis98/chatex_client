{"version":3,"sources":["components/Create/CreateForm.js","components/Create/CreateSchema.js","components/Create/Create.js","components/CreateUser.js","components/GetAllUsers.js","components/Login/LoginForm.js","components/Login/LoginSchema.js","components/Login/Login.js","components/LandingPage.js","components/Dialog.js","components/MessageBoard.js","components/UserPage.js","components/Home/Home.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["handleChange","values","errors","isValid","email","type","onChange","value","name","placeholder","password","id","disabled","Yup","shape","min","max","required","bcrypt","require","props","history","useHistory","Typography","variant","className","component","CreateForm","initialValues","validationSchema","CreateSchema","onSubmit","hashedPassword","hashSync","genSaltSync","requestOptions","method","headers","body","JSON","stringify","toLowerCase","fetch","then","response","json","data","success","alert","msg","user","createUser","onClick","push","pathname","CreateUser","Grid","container","item","xs","align","Create","GetAllUsers","useState","users","setUsers","useEffect","getAllUsers","i","text","length","handleSubmit","redirect","authorization","auth","create","LoginForm","LoginSchema","Login","SimpleDialogPrep","onClose","open","getFriends","friend","setFriend","Dialog","aria-labelledby","style","background","borderRadius","padding","width","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","target","error","console","log","addFriend","backgroundColor","SimpleDialog","setOpen","height","IconButton","color","io","MessageBoard","conversation","setConversation","scrollText","setScrollText","dummy","useRef","dummyTop","updateMessageBoard","room","dic","liste","placement","postedByUser","message","messageText","current","scrollIntoView","behavior","socket","on","disconnect","regex","maxHeight","overflow","ref","map","index","Object","keys","mail","margin","listStyle","textAlign","display","whiteSpace","test","href","includes","rel","position","right","bottom","cursor","document","querySelector","getBoundingClientRect","top","UserPage","setEmail","setAuth","userId","setUserId","setRoom","setMsg","friendList","setFriendList","friendSend","setFriendSend","inviteFriend","textContent","userIds","_id","chatRoom","chatRoomId","sendMessage","postMsg","getElementById","addEventListener","event","code","preventDefault","click","removeFriend","friendText","parentElement","borderRight","fontSize","flexWrap","border","alignItems","flexGrow","paddingLeft","Home","blocks","createElement","classList","add","appendChild","animateBlocks","anime","targets","translateX","random","translateY","scale","easing","duration","delay","stagger","complete","useStyles","makeStyles","theme","nav","Nav","classes","AppBar","Toolbar","exact","to","App","createMuiTheme","palette","primary","main","contrastText","secondary","typography","fontFamily","join","ThemeProvider","CssBaseline","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c5853f91.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nimport React from \"react\";\r\nimport { Form } from \"formik\";\r\n\r\nexport default ({ handleChange, values, errors, isValid }) => {\r\n  return (\r\n    <Form>\r\n      <div>{errors.email}</div>\r\n      <input\r\n        type=\"email\"\r\n        onChange={handleChange}\r\n        value={values.email}\r\n        name=\"email\"\r\n        placeholder=\"Email\"\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        onChange={handleChange}\r\n        value={values.password}\r\n        name=\"password\"\r\n        placeholder=\"Password\"\r\n      />\r\n      <button id=\"create\" disabled={!isValid}>\r\n        Create Account\r\n      </button>\r\n    </Form>\r\n  );\r\n};\r\n","import * as Yup from \"yup\";\r\n\r\nexport default Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n});\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport CreateForm from \"./CreateForm\";\r\nimport CreateSchema from \"./CreateSchema\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst bcrypt = require(\"bcryptjs\");\r\n\r\nexport default (props) => {\r\n  const createUser = (email, password) => {\r\n    const hashedPassword = bcrypt.hashSync(password, bcrypt.genSaltSync());\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: email.toLowerCase(),\r\n        password: hashedPassword,\r\n      }),\r\n    };\r\n    fetch(\"/users\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (!data.success) {\r\n          return alert(data.msg);\r\n        }\r\n        alert(\"User: \" + data.user.email + \" created successfully!\");\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (values) => {\r\n    const email = values.email;\r\n    const password = values.password;\r\n    createUser(email, password);\r\n  };\r\n\r\n  const history = useHistory();\r\n  const back = () => {\r\n    history.push({\r\n      pathname: \"/home\",\r\n    });\r\n  };\r\n  return (\r\n    <div id=\"mainGrid\">\r\n      <Typography variant=\"h1\">Create an Account</Typography>\r\n      <div className=\"signup\">\r\n        <Formik\r\n          component={CreateForm}\r\n          initialValues={{ email: \"\", password: \"\" }}\r\n          validationSchema={CreateSchema}\r\n          onSubmit={handleSubmit}\r\n        />\r\n        <button id=\"cancel\" onClick={back}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Create from \"./Create/Create\";\r\n\r\nfunction CreateUser() {\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12} align=\"center\">\r\n        <Create />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default CreateUser;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\n\r\nfunction GetAllUsers() {\r\n  const [users, setUsers] = useState(0);\r\n  useEffect(() => {\r\n    return getAllUsers();\r\n  });\r\n\r\n  const getAllUsers = () => {\r\n    fetch(\"/users\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        let text = \"\";\r\n        let i;\r\n        for (i = 0; i < data[\"users\"].length; i++) {\r\n          text += data[\"users\"][i].email + \" \";\r\n        }\r\n        return setUsers(JSON.stringify(text));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container align=\"center\" id=\"main\">\r\n      <Grid item>\r\n        <Typography variant=\"h3\">All Users:</Typography>\r\n        <Typography variant=\"h5\">{users}</Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default GetAllUsers;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport React from \"react\";\r\nimport { Form } from \"formik\";\r\n\r\nexport default ({ handleChange, values, errors, isValid }) => {\r\n  return (\r\n    <Form>\r\n      <div>{errors.email}</div>\r\n      <input\r\n        type=\"email\"\r\n        onChange={handleChange}\r\n        value={values.email}\r\n        name=\"email\"\r\n        placeholder=\"Email\"\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        onChange={handleChange}\r\n        value={values.password}\r\n        name=\"password\"\r\n        placeholder=\"Password\"\r\n      />\r\n      <button disabled={!isValid}>Login</button>\r\n    </Form>\r\n  );\r\n};\r\n","import * as Yup from \"yup\";\r\n\r\nexport default Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n});\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport React, { useEffect } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport LoginSchema from \"./LoginSchema\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default (props) => {\r\n  const handleSubmit = (values) => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: values.email,\r\n        password: values.password,\r\n      }),\r\n    };\r\n    fetch(\"/users/email/\" + values.email)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        try {\r\n          const id = data[\"user\"][\"_id\"];\r\n          const email = data[\"user\"][\"email\"];\r\n          fetch(\"/login/\" + id, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n              if (!data.success) {\r\n                return alert(data.msg);\r\n              }\r\n              redirect(id, data.authorization, email);\r\n            });\r\n        } catch {\r\n          alert(\"No user with that email\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const redirect = (id, auth, email) => {\r\n    history.push(\"/users/\" + id);\r\n  };\r\n\r\n  const history = useHistory();\r\n  const create = () => {\r\n    history.push({\r\n      pathname: \"/create\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\"/login\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (!data.success) {\r\n          return;\r\n        }\r\n        history.push(\"/users/\" + data.id);\r\n      });\r\n    return () => {};\r\n  });\r\n\r\n  const renderForm = () => {\r\n    return (\r\n      <div id=\"mainGrid\">\r\n        <h2>ChatEx</h2>\r\n        <div className=\"signup\">\r\n          <Formik\r\n            component={LoginForm}\r\n            initialValues={{ email: \"\", password: \"\" }}\r\n            validationSchema={LoginSchema}\r\n            onSubmit={handleSubmit}\r\n          />\r\n          <button id=\"create\" onClick={create}>\r\n            Create Account\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return renderForm();\r\n};\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport React from \"react\";\r\nimport \"../LandingPage.css\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Login from \"./Login/Login\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12} align=\"center\">\r\n        <Login />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PersonAddRoundedIcon from \"@material-ui/icons/PersonAddRounded\";\r\n\r\nconst SimpleDialogPrep = (props) => {\r\n  const { onClose, open, getFriends } = props;\r\n  const [friend, setFriend] = useState(\"\");\r\n\r\n  const addFriend = () => {\r\n    try {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          friend: friend.target.value.toLowerCase(),\r\n        }),\r\n      };\r\n      fetch(\"/users/addFriend\", requestOptions)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (!data.success) {\r\n            return alert(\"No email found\");\r\n          }\r\n          getFriends();\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Please type in a name\");\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  const handleClick = () => {\r\n    addFriend();\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"addFriend\"\r\n      open={open}\r\n      id=\"outerDialog\"\r\n    >\r\n      <div\r\n        style={{\r\n          background: \"#2d2d2d\",\r\n          borderRadius: \"1rem\",\r\n          padding: \"1rem\",\r\n          width: \"20rem\",\r\n        }}\r\n      >\r\n        <DialogTitle id=\"addFriend\" style={{}}>\r\n          Add a Friend!\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <input\r\n              className=\"friendInput\"\r\n              onChange={setFriend}\r\n              placeholder=\"Write in your friend's E-mail!\"\r\n            ></input>\r\n          </DialogContentText>\r\n          <DialogActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={handleClick}\r\n              style={{ backgroundColor: \"#8eff8b\" }}\r\n            >\r\n              Add friend\r\n            </Button>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst SimpleDialog = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const getFriends = props.getFriends;\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"3rem\",\r\n        height: \"3rem\",\r\n      }}\r\n    >\r\n      <IconButton\r\n        onClick={handleOpen}\r\n        style={{\r\n          color: \"#ffffff\",\r\n        }}\r\n      >\r\n        <PersonAddRoundedIcon />\r\n      </IconButton>\r\n      <SimpleDialogPrep\r\n        getFriends={getFriends}\r\n        open={open}\r\n        onClose={handleClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleDialog;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst io = require(\"socket.io-client\");\r\n\r\nconst MessageBoard = (props) => {\r\n  const [conversation, setConversation] = useState([\r\n    {\r\n      \"It's so quiet in here...\": [\"\", \"\", \"#ffffff\"],\r\n    },\r\n    {\r\n      \"Try adding a friend by clicking the '+' button under 'Friends', or invite an existing friend by clicking on their respective e-mail!\": [\r\n        \"\",\r\n        \"\",\r\n        \"#ffffff\",\r\n      ],\r\n    },\r\n    {\r\n      \"You may also remove a friend by clicking the 'x' button next to their e-mail.\": [\r\n        \"\",\r\n        \"\",\r\n        \"#ffffff\",\r\n      ],\r\n    },\r\n  ]);\r\n  const [scrollText, setScrollText] = useState(\"Scroll to Top \\u2191\");\r\n\r\n  const dummy = useRef();\r\n  const dummyTop = useRef();\r\n\r\n  useEffect(() => {\r\n    const updateMessageBoard = () => {\r\n      const requestOptions = {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          authorization: \"Bearer \" + props.auth,\r\n        },\r\n      };\r\n      fetch(\"/room/\" + props.room, requestOptions)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          let text = [];\r\n          let i;\r\n\r\n          try {\r\n            for (i = 0; i < data.conversation.length; i++) {\r\n              let dic = {};\r\n              let liste = [];\r\n              let placement;\r\n              let color;\r\n              liste.push(data.conversation[i].postedByUser.email);\r\n\r\n              if (data.conversation[i].postedByUser.email === props.email) {\r\n                placement = \"right\";\r\n                color = \"#94e4f5\";\r\n              } else {\r\n                placement = \"\";\r\n                color = \"#ffffff\";\r\n              }\r\n              liste.push(placement);\r\n              liste.push(color);\r\n              dic[data.conversation[i].message.messageText] = liste;\r\n              text.push(dic);\r\n            }\r\n            if (conversation !== text) {\r\n              setConversation(text);\r\n            }\r\n            dummy.current.scrollIntoView({ behavior: \"smooth\" });\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        });\r\n    };\r\n\r\n    if (props.room) {\r\n      updateMessageBoard();\r\n\r\n      var socket = io(\"ws://chatex2.herokuapp.com/\");\r\n\r\n      socket.on(\"message\", (text) => {\r\n        updateMessageBoard();\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (props.room) {\r\n        socket.disconnect();\r\n      }\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.room, props.auth, props.email]);\r\n\r\n  const handleTop = () => {\r\n    const box = document.querySelector(\"#dummyTop\");\r\n    const rect = box.getBoundingClientRect();\r\n    if (rect.top < 0) {\r\n      dummyTop.current.scrollIntoView({ behavior: \"smooth\" });\r\n      setScrollText(\"Scroll to Current \\u2193\");\r\n    } else {\r\n      dummy.current.scrollIntoView({ behavior: \"smooth\" });\r\n      setScrollText(\"Scroll to Top \\u2191\");\r\n    }\r\n  };\r\n\r\n  const regex = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\r\n\r\n  return (\r\n    <div\r\n      id=\"paperField\"\r\n      className=\"innerMessage\"\r\n      style={{\r\n        maxHeight: \"calc(100vh - 12rem)\",\r\n        overflow: \"auto\",\r\n        backgroundColor: \"\",\r\n      }}\r\n    >\r\n      <div id=\"textBox\">\r\n        <div id=\"dummyTop\" ref={dummyTop}></div>\r\n        <ul>\r\n          {conversation.map((value, index) => {\r\n            const text = Object.keys(value);\r\n            const align = Object.values(value)[0][1];\r\n            const color = Object.values(value)[0][2];\r\n            const mail = Object.values(value)[0][0];\r\n            return (\r\n              <li\r\n                style={{\r\n                  margin: \"0.5rem\",\r\n                  listStyle: \"none\",\r\n                  textAlign: align,\r\n                }}\r\n                key={index}\r\n              >\r\n                <div\r\n                  style={{\r\n                    borderRadius: \"1rem\",\r\n                    backgroundColor: color,\r\n                    display: \"inline-block\",\r\n                    padding: \"0.5rem\",\r\n                    textAlign: \"left\",\r\n                    whiteSpace: \"pre-line\",\r\n                  }}\r\n                >\r\n                  {regex.test(text) ? (\r\n                    <a\r\n                      href={text[0].includes(\"http\") ? text : \"//\" + text}\r\n                      target=\"_blank\"\r\n                      rel=\"noreferrer\"\r\n                      style={{\r\n                        color: \"#2d2d2d\",\r\n                      }}\r\n                    >\r\n                      {text}\r\n                    </a>\r\n                  ) : (\r\n                    text\r\n                  )}\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    color: \"rgba(255,255,255,0.3)\",\r\n                    textAlign: align,\r\n                  }}\r\n                >\r\n                  {mail}\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        <div>\r\n          <p\r\n            style={{\r\n              position: \"fixed\",\r\n              right: 50,\r\n              bottom: \"6rem\",\r\n              color: \"#ffffff\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={handleTop}\r\n          >\r\n            {scrollText}\r\n          </p>\r\n        </div>\r\n        <div ref={dummy}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageBoard;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Grid, IconButton } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SimpleDialog from \"./Dialog.js\";\r\n\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nimport ClearRoundedIcon from \"@material-ui/icons/ClearRounded\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\n\r\nimport MessageBoard from \"./MessageBoard.js\";\r\n\r\nconst UserPage = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [auth, setAuth] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [friendList, setFriendList] = useState([]);\r\n  const [friendSend, setFriendSend] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const inviteFriend = (values) => {\r\n    try {\r\n      fetch(\"/users/email/\" + values.target.textContent)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (!data.success) {\r\n            return;\r\n          }\r\n          const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              authorization: \"Bearer \" + auth,\r\n            },\r\n            body: JSON.stringify({\r\n              userIds: [userId, data.user._id],\r\n              type: \"consumer-to-consumer\",\r\n            }),\r\n          };\r\n          fetch(\"/room/initiate\", requestOptions)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n              setRoom(data.chatRoom.chatRoomId);\r\n              setFriendSend(values.target.textContent);\r\n            });\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleSend = () => {\r\n    sendMessage();\r\n\r\n    const msgBox = document.getElementById(\"msgBox\");\r\n    msgBox.value = \"\";\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    try {\r\n      const postMsg = msg.target.value;\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          authorization: \"Bearer \" + auth,\r\n        },\r\n        body: JSON.stringify({\r\n          messageText: postMsg,\r\n        }),\r\n      };\r\n      fetch(\"/room/\" + room + \"/message\", requestOptions)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.success) {\r\n            return;\r\n          }\r\n        });\r\n    } catch {\r\n      console.log(\"Not connected\");\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    fetch(\"/logout\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.success) {\r\n          history.push(\"/\");\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getSession = () => {\r\n      fetch(\"/login\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (!data.success) {\r\n            history.push(\"/\");\r\n          } else {\r\n            setEmail(data.email);\r\n            setAuth(data.auth);\r\n            setUserId(data.id);\r\n          }\r\n        });\r\n    };\r\n    const setEnter = () => {\r\n      var inp = document.getElementById(\"msgBox\");\r\n      inp.addEventListener(\"keyup\", function (event) {\r\n        if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n          event.preventDefault();\r\n          document.getElementById(\"sendMessage\").click();\r\n        }\r\n      });\r\n    };\r\n\r\n    getSession();\r\n    setEnter();\r\n    getFriends();\r\n\r\n    return () => {};\r\n  }, [history]);\r\n\r\n  const getFriends = () => {\r\n    try {\r\n      fetch(\"/users/friends/allFriends\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          var liste = [];\r\n          if (data.user) {\r\n            for (var i = 0; i < data.user.friendList.length; i++) {\r\n              liste.push(data.user.friendList[i]);\r\n            }\r\n            setFriendList(liste);\r\n          }\r\n          return;\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Friendlist empty\");\r\n    }\r\n  };\r\n\r\n  const removeFriend = (values) => {\r\n    const friendText =\r\n      values.target.parentElement.parentElement.parentElement.parentElement\r\n        .parentElement.textContent;\r\n    try {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          friend: friendText,\r\n        }),\r\n      };\r\n      fetch(\"/users/removeFriend\", requestOptions)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          getFriends();\r\n        });\r\n    } catch (error) {\r\n      console.log(\"oh no\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container className=\"main\">\r\n      <Grid\r\n        item\r\n        className=\"info\"\r\n        style={{\r\n          borderRight: \"2px solid #3a3a3a\",\r\n        }}\r\n      >\r\n        <div className=\"infoDiv\">\r\n          <h2 className=\"infoHeader\">ChatEx</h2>\r\n          <h4\r\n            style={{\r\n              color: \"#ffffff\",\r\n              fontSize: \"1rem\",\r\n              padding: \"1rem\",\r\n            }}\r\n          >\r\n            Friends:\r\n          </h4>\r\n          <SimpleDialog getFriends={getFriends} />\r\n          <div\r\n            id=\"friendList\"\r\n            style={{\r\n              maxHeight: \"40vh\",\r\n              overflow: \"auto\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <ul\r\n              style={{\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              {friendList.map((value, index) => {\r\n                return (\r\n                  <li\r\n                    style={{\r\n                      listStyle: \"none\",\r\n                      textAlign: \"left\",\r\n                      margin: \"0.5rem 0.5rem\",\r\n                      width: \"100%\",\r\n                    }}\r\n                    key={index}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: \"#2f2f2f\",\r\n                        border: \"1px solid black\",\r\n                        borderRadius: \"1rem\",\r\n                        padding: \"0.5rem\",\r\n                        color: \"#fff\",\r\n                        display: \"flex\",\r\n                        flexWrap: \"wrap\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <div\r\n                        onClick={inviteFriend}\r\n                        style={{\r\n                          cursor: \"pointer\",\r\n                          flexGrow: \"1\",\r\n                        }}\r\n                      >\r\n                        {value}\r\n                      </div>\r\n\r\n                      <div style={{}} onClick={removeFriend}>\r\n                        <IconButton\r\n                          style={{\r\n                            width: \"1rem\",\r\n                            height: \"1rem\",\r\n                            paddingLeft: \"1rem\",\r\n                            color: \"#ffffff\",\r\n                          }}\r\n                        >\r\n                          <ClearRoundedIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n          <IconButton onClick={logout} id=\"logout\">\r\n            <ExitToAppRoundedIcon />\r\n          </IconButton>\r\n        </div>\r\n      </Grid>\r\n      <Grid item className=\"messageBoard\">\r\n        <MessageBoard\r\n          auth={auth}\r\n          room={room}\r\n          email={email}\r\n          friend={friendSend}\r\n        />\r\n        <div className=\"button\">\r\n          <textarea\r\n            id=\"msgBox\"\r\n            className=\"messageInput\"\r\n            onChange={setMsg}\r\n            placeholder=\"Write something cool!\"\r\n          ></textarea>\r\n          <IconButton id=\"sendMessage\" variant=\"contained\" onClick={handleSend}>\r\n            <SendRoundedIcon />\r\n          </IconButton>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./Animate.css\";\r\nimport anime from \"animejs\";\r\n\r\nconst Home = () => {\r\n  useEffect(() => {\r\n    const container = document.querySelector(\".container\");\r\n    for (var i = 0; i <= 30; i++) {\r\n      const blocks = document.createElement(\"div\");\r\n      blocks.classList.add(\"block\");\r\n      container.appendChild(blocks);\r\n    }\r\n\r\n    animateBlocks();\r\n    return () => {};\r\n  });\r\n\r\n  const animateBlocks = () => {\r\n    anime({\r\n      targets: \".block\",\r\n      translateX: () => {\r\n        return anime.random(-1200, 1200);\r\n      },\r\n      translateY: () => {\r\n        return anime.random(-500, 500);\r\n      },\r\n      scale: () => {\r\n        return anime.random(1, 5);\r\n      },\r\n      easing: \"linear\",\r\n      duration: 10000,\r\n      delay: anime.stagger(10),\r\n      complete: animateBlocks,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>ChatEx</h2>\r\n      <h2 id=\"subText\">Free. Private. Simple.</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { AppBar, Toolbar, makeStyles } from \"@material-ui/core\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\r\nimport LockOpenRoundedIcon from \"@material-ui/icons/LockOpenRounded\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nav: {\r\n    background: \"rgba(0,0,0,1)\",\r\n  },\r\n}));\r\n\r\nconst Nav = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar className={classes.nav}>\r\n      <Toolbar>\r\n        <span className=\"item\"></span>\r\n        <NavLink exact to=\"/home\" className=\"link\">\r\n          <LockOpenRoundedIcon />\r\n        </NavLink>\r\n        <NavLink exact to=\"/\" className=\"link\">\r\n          <HomeRoundedIcon />\r\n        </NavLink>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport CreateUser from \"./components/CreateUser.js\";\nimport GetAllUsers from \"./components/GetAllUsers.js\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LandingPage from \"./components/LandingPage.js\";\nimport UserPage from \"./components/UserPage.js\";\nimport Home from \"./components/Home/Home.js\";\nimport Nav from \"./components/Nav.js\";\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      type: \"light\",\n      primary: {\n        main: \"#94E4F5\",\n        contrastText: \"#000\",\n      },\n      secondary: {\n        main: \"#ffffff\",\n        contrastText: \"#fff\",\n      },\n    },\n    typography: {\n      fontFamily: [\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Segoe UI\"',\n        \"Roboto\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(\",\"),\n    },\n  });\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/home\">\n            <LandingPage />\n          </Route>\n          <Route exact path=\"/create\">\n            <CreateUser />\n          </Route>\n          <Route exact path=\"/users\">\n            <GetAllUsers />\n          </Route>\n          <Route path=\"/users/:id\">\n            <UserPage />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}